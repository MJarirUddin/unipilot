/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SetupTokens, SetupTokensInterface } from "../SetupTokens";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mintTo",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "getToken0BalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal0",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mintTo",
        type: "address",
      },
    ],
    name: "minter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "contract TestERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "contract TestERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b9b380380610b9b83398101604081905261002f9161023f565b610037610046565b6100408161014d565b5061028f565b6ec097ce7bc90715b34b9f100000000060405161006290610232565b61006c9190610286565b604051809103906000f080158015610088573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b03929092169190911790556040516ec097ce7bc90715b34b9f1000000000906100c690610232565b6100d09190610286565b604051809103906000f0801580156100ec573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392831617908190556000549082169116111561014b5760018054600080546001600160a01b03198084166001600160a01b038381169190911790955516929091169190911790555b565b6000546040516340c10f1960e01b81526001600160a01b03909116906340c10f199061018c9084906c0c9f2c9cd04674edea400000009060040161026d565b600060405180830381600087803b1580156101a657600080fd5b505af11580156101ba573d6000803e3d6000fd5b50506001546040516340c10f1960e01b81526001600160a01b0390911692506340c10f1991506101fd9084906c0c9f2c9cd04674edea400000009060040161026d565b600060405180830381600087803b15801561021757600080fd5b505af115801561022b573d6000803e3d6000fd5b5050505050565b61063e8061055d83390190565b600060208284031215610250578081fd5b81516001600160a01b0381168114610266578182fd5b9392505050565b6001600160a01b03929092168252602082015260400190565b90815260200190565b6102bf8061029e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630cb1c053146100515780630dfe16811461007a5780633dd08c381461008f578063d21220a7146100a4575b600080fd5b61006461005f366004610236565b6100ac565b60405161007191906102a9565b60405180910390f35b610082610133565b604051610071919061027c565b6100a261009d366004610236565b610142565b005b610082610227565b600080546040516370a0823160e01b81526001600160a01b03909116906370a08231906100dd90859060040161027c565b60206040518083038186803b1580156100f557600080fd5b505afa158015610109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012d9190610264565b92915050565b6000546001600160a01b031681565b6000546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906101819084906c0c9f2c9cd04674edea4000000090600401610290565b600060405180830381600087803b15801561019b57600080fd5b505af11580156101af573d6000803e3d6000fd5b50506001546040516340c10f1960e01b81526001600160a01b0390911692506340c10f1991506101f29084906c0c9f2c9cd04674edea4000000090600401610290565b600060405180830381600087803b15801561020c57600080fd5b505af1158015610220573d6000803e3d6000fd5b5050505050565b6001546001600160a01b031681565b600060208284031215610247578081fd5b81356001600160a01b038116811461025d578182fd5b9392505050565b600060208284031215610275578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b9081526020019056fea164736f6c6343000706000a608060405234801561001057600080fd5b5060405161063e38038061063e8339818101604052602081101561003357600080fd5b505161003f3382610045565b506100c8565b6001600160a01b0382166000908152602081905260409020548101818110156100a8576040805162461bcd60e51b815260206004820152601060248201526f6f766572666c6f772062616c616e636560801b604482015290519081900360640190fd5b6001600160a01b0390921660009081526020819052604090209190915550565b610567806100d76000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806370a082311161005057806370a082311461011b578063a9059cbb14610153578063dd62ed3e1461017f57610072565b8063095ea7b31461007757806323b872dd146100b757806340c10f19146100ed575b600080fd5b6100a36004803603604081101561008d57600080fd5b506001600160a01b0381351690602001356101ad565b604080519115158252519081900360200190f35b6100a3600480360360608110156100cd57600080fd5b506001600160a01b03813581169160208101359091169060400135610213565b6101196004803603604081101561010357600080fd5b506001600160a01b03813516906020013561035f565b005b6101416004803603602081101561013157600080fd5b50356001600160a01b03166103ef565b60408051918252519081900360200190f35b6100a36004803603604081101561016957600080fd5b506001600160a01b038135169060200135610401565b6101416004803603604081101561019557600080fd5b506001600160a01b038135811691602001351661053d565b3360008181526001602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6001600160a01b038216600090815260208190526040812054828101811115610283576040805162461bcd60e51b815260206004820152601a60248201527f6f766572666c6f772062616c616e636520726563697069656e74000000000000604482015290519081900360640190fd5b6001600160a01b03808516600090815260208190526040808220848701905591871681522054838110156102fe576040805162461bcd60e51b815260206004820152601860248201527f756e646572666c6f772062616c616e63652073656e6465720000000000000000604482015290519081900360640190fd5b6001600160a01b0380871660008181526020818152604091829020888603905581518881529151938916937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600195945050505050565b6001600160a01b0382166000908152602081905260409020548101818110156103cf576040805162461bcd60e51b815260206004820152601060248201527f6f766572666c6f772062616c616e636500000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0390921660009081526020819052604090209190915550565b60006020819052908152604090205481565b3360009081526020819052604081205482811015610466576040805162461bcd60e51b815260206004820152601460248201527f696e73756666696369656e742062616c616e6365000000000000000000000000604482015290519081900360640190fd5b3360009081526020819052604080822085840390556001600160a01b03861682529020548084018111156104e1576040805162461bcd60e51b815260206004820152601a60248201527f726563697069656e742062616c616e6365206f766572666c6f77000000000000604482015290519081900360640190fd5b6001600160a01b0385166000818152602081815260409182902084880190558151878152915133927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92908290030190a3506001949350505050565b60016020908152600092835260408084209091529082529020548156fea164736f6c6343000706000a";

export class SetupTokens__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _mintTo: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SetupTokens> {
    return super.deploy(_mintTo, overrides || {}) as Promise<SetupTokens>;
  }
  getDeployTransaction(
    _mintTo: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_mintTo, overrides || {});
  }
  attach(address: string): SetupTokens {
    return super.attach(address) as SetupTokens;
  }
  connect(signer: Signer): SetupTokens__factory {
    return super.connect(signer) as SetupTokens__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SetupTokensInterface {
    return new utils.Interface(_abi) as SetupTokensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SetupTokens {
    return new Contract(address, _abi, signerOrProvider) as SetupTokens;
  }
}
