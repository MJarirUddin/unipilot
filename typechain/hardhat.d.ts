/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IUniswapV3SwapCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3SwapCallback__factory>;
    getContractFactory(
      name: "IUniswapV3Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Factory__factory>;
    getContractFactory(
      name: "IUniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Pool__factory>;
    getContractFactory(
      name: "IUniswapV3PoolActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolDerivedState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolDerivedState__factory>;
    getContractFactory(
      name: "IUniswapV3PoolEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolEvents__factory>;
    getContractFactory(
      name: "IUniswapV3PoolImmutables",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolImmutables__factory>;
    getContractFactory(
      name: "IUniswapV3PoolOwnerActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolOwnerActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolState__factory>;
    getContractFactory(
      name: "IWETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH9__factory>;
    getContractFactory(
      name: "ISwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwapRouter__factory>;
    getContractFactory(
      name: "ERC721Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Permit__factory>;
    getContractFactory(
      name: "IWETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH9__factory>;
    getContractFactory(
      name: "PeripheryPayments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PeripheryPayments__factory>;
    getContractFactory(
      name: "ULMState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ULMState__factory>;
    getContractFactory(
      name: "UniswapLiquidityManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapLiquidityManager__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IWETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH9__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Permit__factory>;
    getContractFactory(
      name: "IExchangeManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExchangeManager__factory>;
    getContractFactory(
      name: "IHyperVisor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHyperVisor__factory>;
    getContractFactory(
      name: "ILiquidityMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidityMigrator__factory>;
    getContractFactory(
      name: "IUnipilot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUnipilot__factory>;
    getContractFactory(
      name: "IUnipilotFarm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUnipilotFarm__factory>;
    getContractFactory(
      name: "IUnipilotTokenProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUnipilotTokenProxy__factory>;
    getContractFactory(
      name: "IUniStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniStrategy__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IUniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Pool__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "ILixirStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILixirStrategy__factory>;
    getContractFactory(
      name: "ILixirVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILixirVault__factory>;
    getContractFactory(
      name: "ILixirVaultETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILixirVaultETH__factory>;
    getContractFactory(
      name: "ILixirVaultToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILixirVaultToken__factory>;
    getContractFactory(
      name: "IUniswapV3PoolActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolDerivedState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolDerivedState__factory>;
    getContractFactory(
      name: "IUniswapV3PoolEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolEvents__factory>;
    getContractFactory(
      name: "IUniswapV3PoolImmutables",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolImmutables__factory>;
    getContractFactory(
      name: "IUniswapV3PoolOwnerActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolOwnerActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolState__factory>;
    getContractFactory(
      name: "IPopsicleV3Optimizer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPopsicleV3Optimizer__factory>;
    getContractFactory(
      name: "INonfungiblePositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INonfungiblePositionManager__factory>;
    getContractFactory(
      name: "IULMEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IULMEvents__factory>;
    getContractFactory(
      name: "IUniswapLiquidityManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapLiquidityManager__factory>;
    getContractFactory(
      name: "IHypervisor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHypervisor__factory>;
    getContractFactory(
      name: "IUniversalVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniversalVault__factory>;
    getContractFactory(
      name: "IVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVault__factory>;
    getContractFactory(
      name: "IOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOracle__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IndexFund",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IndexFund__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Burnable__factory>;
    getContractFactory(
      name: "IUnipilotTokenProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUnipilotTokenProxy__factory>;
    getContractFactory(
      name: "Pilot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pilot__factory>;
    getContractFactory(
      name: "TestERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20__factory>;
    getContractFactory(
      name: "UnipilotTokenProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnipilotTokenProxy__factory>;
    getContractFactory(
      name: "DemoTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DemoTest__factory>;
    getContractFactory(
      name: "DemoTestWithSetUp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DemoTestWithSetUp__factory>;
    getContractFactory(
      name: "DSTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSTest__factory>;
    getContractFactory(
      name: "DappTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DappTest__factory>;
    getContractFactory(
      name: "DappFarm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DappFarm__factory>;
    getContractFactory(
      name: "DappMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DappMock__factory>;
    getContractFactory(
      name: "Hevm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Hevm__factory>;
    getContractFactory(
      name: "SetupUnipilotFarm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SetupUnipilotFarm__factory>;
    getContractFactory(
      name: "MockUniswapV3Router",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockUniswapV3Router__factory>;
    getContractFactory(
      name: "SetupMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SetupMock__factory>;
    getContractFactory(
      name: "SetupTokens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SetupTokens__factory>;
    getContractFactory(
      name: "VisorPOC",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VisorPOC__factory>;
    getContractFactory(
      name: "Unipilot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Unipilot__factory>;
    getContractFactory(
      name: "UnipilotFarm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnipilotFarm__factory>;
    getContractFactory(
      name: "UniStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniStrategy__factory>;
    getContractFactory(
      name: "V3Oracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V3Oracle__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
